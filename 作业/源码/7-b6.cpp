/* 2452545 计算机 刘晴语 */

#include <iostream>
#include "7-b6.h"
using namespace std;









// 辅助函数：检查日期是否合法
bool Date::isCorrectDate(int y, int m, int d) {
    // 年份检查
    if (y < 1900 || y > 2099) return false;

    // 月份检查
    if (m < 1 || m > 12) return false;

    // 日期检查
    int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    // 闰年二月处理
    if (m == 2 && ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))) {
        if (d < 1 || d > 29) return false;
    }
    else {
        if (d < 1 || d > daysInMonth[m]) return false;
    }

    return true;
}

// 辅助函数：设置默认值
void Date::setDefaults() {
    year = 2000;
    month = 1;
    day = 1;
}

/***************************************************************************
  函数名称：Date 默认构造函数
  功    能：初始化日期为2000.1.1
  输入参数：无
  返 回 值：无
***************************************************************************/
Date::Date() {
    setDefaults();
}

/***************************************************************************
  函数名称：Date 三参数构造函数
  功    能：根据输入的年月日初始化日期
  输入参数：y-年, m-月, d-日
  返 回 值：无
***************************************************************************/
Date::Date(int y, int m, int d) {
    if (!isCorrectDate(y, m, d)) {
        // 年非法
        if (y < 1900 || y > 2099) {
            y = 2000;
        }

        // 月非法
        if (m < 1 || m > 12) {
            m = 1;
        }

        // 日非法
        int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        if (m == 2 && ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))) {
            if (d < 1 || d > 29) d = 1;
        }
        else {
            if (d < 1 || d > daysInMonth[m]) d = 1;
        }
    }

    year = y;
    month = m;
    day = d;
}

/***************************************************************************
  函数名称：Date 单参数构造函数
  功    能：根据1900.1.1开始的天数初始化日期
  输入参数：days-从1900.1.1开始的天数
  返 回 值：无
***************************************************************************/
Date::Date(int days) {
    // 边界处理
    if (days < 1) {
        setDefaults();
        return;
    }

    // 计算最大天数(1900.1.1到2099.12.31)
    int maxDays = 0;
    for (int y = 1900; y <= 2099; y++) {
        maxDays += ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0) ? 366 : 365);
    }

    if (days > maxDays) {
        year = 2099;
        month = 12;
        day = 31;
        return;
    }

    // 计算日期
    int y = 1900;
    int m = 1;
    int d = 1;

    while (days > 1) {
        d++;
        int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        if (m == 2 && ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))) {
            daysInMonth[2] = 29;
        }

        if (d > daysInMonth[m]) {
            d = 1;
            m++;
            if (m > 12) {
                m = 1;
                y++;
            }
        }
        days--;
    }

    year = y;
    month = m;
    day = d;
}

/***************************************************************************
  函数名称：set
  功    能：设置日期
  输入参数：y-年, m-月, d-日
  返 回 值：无
***************************************************************************/
void Date::set(int y, int m, int d) {
    // 保存原始值
    int origY = year;
    int origM = month;
    int origD = day;

    // 处理年
    if (y == 0) {
        y = origY;
    }
    else if (y < 1900 || y > 2099) {
        y = 2000;
    }

    // 处理月
    if (m == 0) {
        m = origM;
    }
    else if (m < 1 || m > 12) {
        m = 1;
    }

    // 处理日
    if (d == 0) {
        d = origD;
    }
    else {
        int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
        if (m == 2 && ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))) {
            daysInMonth[2] = 29;
        }

        if (d < 1 || d > daysInMonth[m]) {
            d = 1;
        }
    }

    year = y;
    month = m;
    day = d;
}

// set重载：年月
void Date::set(int y, int m) {
    set(y, m, 1); // 日默认为1
}

// set重载：年
void Date::set(int y) {
    set(y, 1, 1); // 月日默认为1
}

/***************************************************************************
  函数名称：get
  功    能：获取当前日期
  输入参数：y-年引用, m-月引用, d-日引用
  返 回 值：无
***************************************************************************/
void Date::get(int& y, int& m, int& d) const {
    y = year;
    m = month;
    d = day;
}

/***************************************************************************
  函数名称：show
  功    能：显示当前日期
  输入参数：无
  返 回 值：无
***************************************************************************/
void Date::show() const {
    cout << year << "." << month << "." << day << endl;
}